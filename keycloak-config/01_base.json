{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "cibaAuthRequestedUserHint": "login_hint",
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "realmReusableOtpCode": "false"
  },
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Method with which to verity the existing account",
      "id": "eabc5088-d9f8-4d77-b543-bc89fd034abb",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "a9c0dc68-4a94-4022-b596-f8723550eb4f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "9f77f5be-cd2e-489d-abde-a56095944c23",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "First broker login - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "41e637b3-fdf9-4f97-8458-b5d3f1fb6cc7",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "4e465b24-1183-4bc7-82d4-837de665ef7e",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Reset - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "id": "dc248550-caba-4258-85a2-f9df281461ab",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "User creation or linking",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow for the existing/non-existing user alternatives",
      "id": "4eb854f4-97b0-4fff-9e0d-1b86c17c9cf9",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "833d56ab-7ef0-41bd-81f6-f520c87b50b8",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "f0d0ba59-1a35-46f8-b361-e9c013215d08",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "browser_certauth",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 0,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 1,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 2,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-x509-client-username-form",
          "authenticatorConfig": "browser_x509_ocsp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 3,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "browser_certauth forms",
          "priority": 4,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": false,
      "description": "browser based authentication",
      "id": "0892faf1-dd75-4235-884c-097fe8db9649",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "browser_certauth Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 0,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 1,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": false,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "15adec1c-9b0a-4f84-ae88-9f6012dca87c",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser_certauth forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 0,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "browser_certauth Browser - Conditional OTP",
          "priority": 1,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": false,
      "description": "Username, password, otp and other auth forms.",
      "id": "b2438250-fb93-4e7d-89da-e5136b04c0a6",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "17a701d5-1a8b-4be9-a2ca-8055adfeccd7",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "f0f2ab2b-1f04-4ac0-8e8a-2bfb48ca35a4",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "direct_certauth",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 0,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-auth-x509-username",
          "authenticatorConfig": "direct_x509_ocsp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 1,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 2,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "direct_certauth Direct Grant - Conditional OTP",
          "priority": 3,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": false,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "41d4e50d-e355-4b83-8c95-5831741ad434",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "direct_certauth Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 0,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 1,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": false,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "aabb66c4-dea3-40cf-ad80-29cf706ea6ef",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "406a9fc8-9258-47f0-887c-b9d986cc1015",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "7327145b-4fb3-4c76-a1ab-ec25ba7201d3",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "da34101d-9f8c-43eb-b28c-99505c1f269e",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "5623a5a0-46e1-4f94-8dd6-d68b483ee67e",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 70,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "5ebb40f6-4cf9-4a3b-a63e-46c61faa0e0b",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "e0970aa9-3235-412c-8f12-9ee0f33192a6",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "adaebd0d-a50f-4c04-ab74-38122b76b424",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "browser_x509_ocsp",
      "config": {
        "x509-cert-auth.canonical-dn-enabled": "false",
        "x509-cert-auth.certificate-policy-mode": "All",
        "x509-cert-auth.crldp-checking-enabled": "false",
        "x509-cert-auth.mapper-selection": "Custom Attribute Mapper",
        "x509-cert-auth.mapper-selection.user-attribute-name": "callsign",
        "x509-cert-auth.mapping-source-selection": "Subject's Common Name",
        "x509-cert-auth.ocsp-checking-enabled": "true",
        "x509-cert-auth.ocsp-fail-open": "false",
        "x509-cert-auth.regular-expression": "(.*?)(?:$)",
        "x509-cert-auth.serialnumber-hex-enabled": "false",
        "x509-cert-auth.timestamp-validation-enabled": "true"
      },
      "id": "2cf670ab-3a0e-41d3-ad0f-5fb306712dd0"
    },
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "2c9878e9-73d1-4270-899b-e372fb059292"
    },
    {
      "alias": "direct_x509_ocsp",
      "config": {
        "x509-cert-auth.canonical-dn-enabled": "false",
        "x509-cert-auth.certificate-policy-mode": "All",
        "x509-cert-auth.crldp-checking-enabled": "false",
        "x509-cert-auth.mapper-selection": "Custom Attribute Mapper",
        "x509-cert-auth.mapper-selection.user-attribute-name": "callsign",
        "x509-cert-auth.mapping-source-selection": "Subject's Common Name",
        "x509-cert-auth.ocsp-checking-enabled": "true",
        "x509-cert-auth.ocsp-fail-open": "false",
        "x509-cert-auth.regular-expression": "(.*?)(?:$)",
        "x509-cert-auth.serialnumber-hex-enabled": "false",
        "x509-cert-auth.timestamp-validation-enabled": "true"
      },
      "id": "aa6f6d6d-d287-4432-9c18-65cb13c06cce"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "1c5396f1-2ab9-4819-aaf1-db8502ad03a6"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "referrerPolicy": "no-referrer",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "clientPolicies": {
    "policies": []
  },
  "clientProfiles": {
    "profiles": []
  },
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "86fd1d36-9842-4429-9b22-946d77803de9",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "f9e92173-ee15-481e-96fd-f8cbe0e0e182",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "da792fbb-10e3-478d-8042-00a062a5c4a8",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "dc6f0d2f-7634-472e-af38-0ef9a4a44c1e",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "92f3aa13-8bba-4b8c-ae7e-281861490c13",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "fb13523b-b846-4a2f-bcab-3e9fb803be97",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4afea8c7-a2f1-482d-9d60-aaaaddcaf096",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "84bd3a03-d5c6-435d-821c-d906d298b130",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "ed0bb19a-7991-45fe-84b0-f63a8c1cefd1",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "f4301f4d-5605-4696-9d93-25576a64468f",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "70eea24e-8db7-4431-8b94-3a5ecd907820",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "36ae999a-6f40-44f0-8047-28c690325f51",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "c3bd459d-7401-4514-93e4-2b4a53ed4516",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "id": "21f87a1b-fe80-42ee-9a2c-8628e49fcf23",
      "name": "acr",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0bd6dfdc-c1ca-486e-8dcc-d392d5898c6f",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "03e36eae-0f34-433a-940b-dad8f6ccc4a9",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c12bbd01-6177-43d2-9494-55ec84e0976e",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "38ab27ac-a102-4e34-b430-feb2e4a006d5",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "06a4fce5-45e6-46f5-a7e5-3b41bf908273",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "b3c5f1a5-8629-4e5c-b7c4-637b81cb2bea",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {},
          "consentRequired": false,
          "id": "9ebb99ac-5a5f-4057-9f0c-9e9510c55d54",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "47c3b252-d17c-4474-a93e-c82ee9ec907f",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "e8ebbfb1-8729-4984-b8d5-ecacffcc97fc",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a796b1b9-d1ad-4a74-b90e-e3dcd9cf7f9b",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "91cdac72-fe7c-4a0d-98a6-df304e83d197",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "11c5f925-5bf9-4b20-b9db-df27334c3806",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "12ed89a1-9e77-412d-920a-e96db1b7a436",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "fb935a94-5816-497e-9824-0a19e40808f4",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a0e3da31-432d-4338-9cdb-c7089ba99571",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "jsonType.label": "long",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "1b429b66-d5c7-4046-b85c-cba6632d4ecf",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "14b90ef0-936c-490f-a420-4dbd1f9abfde",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "1f3b731c-e7b8-4a60-8a4b-5b8403c2c34c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e286b03a-e492-4dce-92ad-bac40e115acf",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b28b7943-3a47-42b1-b977-0c9d3267309e",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c7930ce3-9a58-463c-84d5-f4f9767fd3eb",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "83408e5d-ca9c-4c88-8062-33a81eaed681",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c65d9d85-9c08-42f5-b360-56f27e05b8a3",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    }
  ],
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clients": [
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/RASENMAEHER/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "/realms/RASENMAEHER/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/RASENMAEHER/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "e06d192c-7b0b-4d52-a106-f510a0327179",
      "implicitFlowEnabled": false,
      "name": "${client_account-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "36f323dd-6347-48ab-b746-bb522dc8cda6",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/realms/RASENMAEHER/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "4e0a7fd3-66fb-483f-bc4e-5603fa809096",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "be20ee71-f686-4b1c-b7ad-ab764a36760b",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "78c9c350-9516-45da-8d9a-c12d508be3d5",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/RASENMAEHER/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "3a2de54f-bcee-4eba-8548-c960c17a1db6",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "f4d3d29a-6b9f-4bc2-9066-be251d7ad573",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/RASENMAEHER/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "config": {
          "algorithm": [
            "RSA-OAEP"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "a0b37b85-393a-4b70-9744-2bee1b879519",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "HS256"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "42b52fb4-f35a-4bb7-824c-3a2e5f65bb3d",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {}
      },
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "2fb052d2-fd03-4da8-b572-002834c714d5",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "HS512"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "ec284ace-137b-4dcf-a9fe-2462435b5df1",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {}
      },
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "e0cbb14e-e524-4690-8158-ccaf8a5b767e",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {}
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {},
        "id": "30d3a518-afb0-425f-a0a2-3c114c9bc1a7",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        },
        "id": "87eac48d-2549-49eb-946e-9d9d26e73dc9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "f9101d1c-ea9c-4317-ab05-e47bd307a0b1",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {},
        "id": "1d9ea734-1fd0-4af0-afec-ef09d0bcfbb8",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "fbff6573-96d3-4ca3-98cb-5600a77f56a9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "46fbc7ba-5041-4244-b99e-b788e26ec079",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "0dcc65b3-0621-4fb3-9747-f6c811edca6b",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        },
        "id": "ca643cd8-d0f8-4d2c-8856-4e78ebd2d93c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "config": {
          "allowKerberosAuthentication": [
            "false"
          ],
          "authType": [
            "simple"
          ],
          "bindCredential": [
            "$(env:LDAP_ADMIN_PASSWORD)"
          ],
          "bindDn": [
            "cn=admin,dc=example,dc=org"
          ],
          "cachePolicy": [
            "DEFAULT"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "connectionPooling": [
            "false"
          ],
          "connectionUrl": [
            "ldap://openldap:1389"
          ],
          "editMode": [
            "WRITABLE"
          ],
          "enabled": [
            "true"
          ],
          "fullSyncPeriod": [
            "-1"
          ],
          "importEnabled": [
            "true"
          ],
          "krbPrincipalAttribute": [
            "krb5PrincipalName"
          ],
          "pagination": [
            "false"
          ],
          "rdnLDAPAttribute": [
            "uid"
          ],
          "startTls": [
            "false"
          ],
          "syncRegistrations": [
            "true"
          ],
          "trustEmail": [
            "false"
          ],
          "useKerberosForPasswordAuthentication": [
            "false"
          ],
          "usePasswordModifyExtendedOp": [
            "false"
          ],
          "useTruststoreSpi": [
            "ldapsOnly"
          ],
          "userObjectClasses": [
            "inetOrgPerson, organizationalPerson"
          ],
          "usernameLDAPAttribute": [
            "uid"
          ],
          "usersDn": [
            "ou=users,dc=example,dc=org"
          ],
          "uuidLDAPAttribute": [
            "entryUUID"
          ],
          "validatePasswordPolicy": [
            "false"
          ],
          "vendor": [
            "other"
          ]
        },
        "id": "273e4f54-dd7d-4ecd-94d3-d008f18778de",
        "name": "ldap",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "modifyTimestamp"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              },
              "id": "10c07bb3-5d5d-4455-9dfb-a3c92a952e10",
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "mail"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "email"
                ]
              },
              "id": "afa38357-eb57-44c4-945d-2c3bdd1d1bd7",
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "displayName"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "callsign"
                ]
              },
              "id": "822610bf-e1fa-40f6-9d91-f79f286b9797",
              "name": "callsign",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "id": "a4df4557-81e2-4959-b57e-5d51aaea80a5",
              "name": "altUsernames",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {},
              "config": {
                "ldap.attribute": [
                  "description"
                ],
                "attribute.force.default": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "is.binary.attribute": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "altUsernames"
                ]
              }
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "cn"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "firstName"
                ]
              },
              "id": "12853396-280b-4d20-9a90-18dee88900a9",
              "name": "first name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "uid"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              },
              "id": "139daa54-ceac-4854-89a1-d987895c6f15",
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "createTimestamp"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              },
              "id": "8e5ec1bc-d1d8-4220-a59b-028df8dadc6f",
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "drop.non.existing.groups.during.sync": [
                  "true"
                ],
                "group.name.ldap.attribute": [
                  "cn"
                ],
                "group.object.classes": [
                  "groupOfNames"
                ],
                "groups.dn": [
                  "ou=groups,dc=example,dc=org"
                ],
                "groups.path": [
                  "/"
                ],
                "ignore.missing.groups": [
                  "false"
                ],
                "memberof.ldap.attribute": [
                  "memberOf"
                ],
                "membership.attribute.type": [
                  "DN"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "membership.user.ldap.attribute": [
                  "uid"
                ],
                "mode": [
                  "LDAP_ONLY"
                ],
                "preserve.group.inheritance": [
                  "true"
                ],
                "user.roles.retrieve.strategy": [
                  "LOAD_GROUPS_BY_MEMBER_ATTRIBUTE"
                ]
              },
              "id": "1003c85f-53a0-4522-949c-a8aa5f54081c",
              "name": "groups",
              "providerId": "group-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "sn"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              },
              "id": "f8c19946-ecc3-4fe5-a63a-387470ae40c0",
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            }
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"callsign\",\"displayName\":\"callsign\",\"validations\":{},\"annotations\":{},\"required\":{\"roles\":[\"admin\",\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\"]},\"multivalued\":false},{\"name\":\"certpem\",\"displayName\":\"certpem\",\"validations\":{\"length\":{\"min\":\"0\",\"max\":\"8500\"}},\"annotations\":{},\"required\":{\"roles\":[\"admin\",\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\"]},\"multivalued\":false},{\"name\":\"altUsernames\",\"displayName\":\"Alternative user names\",\"validations\":{},\"annotations\":{},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\"]},\"multivalued\":true}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}],\"unmanagedAttributePolicy\":\"ENABLED\"}"
          ]
        },
        "id": "abaa699a-6da8-4dbe-a87d-5ae1969ae764",
        "providerId": "declarative-user-profile",
        "subComponents": {}
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "defaultRole": {
    "clientRole": false,
    "composite": true,
    "containerId": "$(env:KCP_MAIN_ID)",
    "description": "${role_default-roles}",
    "id": "01daddfc-caa4-49b7-be31-5dffc1c76783",
    "name": "default-roles-rasenmaeher"
  },
  "defaultSignatureAlgorithm": "RS256",
  "directGrantFlow": "direct grant",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": false,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "firstBrokerLoginFlow": "first broker login",
  "groups": [],
  "id": "$(env:KCP_MAIN_ID)",
  "identityProviderMappers": [],
  "identityProviders": [],
  "internationalizationEnabled": false,
  "keycloakVersion": "24.0.5",
  "localizationTexts": {},
  "loginWithEmailAllowed": false,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "maxTemporaryLockouts": 0,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyCodeReusable": false,
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "RASENMAEHER",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": false,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "TERMS_AND_CONDITIONS"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "delete_account",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Delete Account",
      "priority": 60,
      "providerId": "delete_account"
    },
    {
      "alias": "webauthn-register",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register",
      "priority": 70,
      "providerId": "webauthn-register"
    },
    {
      "alias": "webauthn-register-passwordless",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register Passwordless",
      "priority": 80,
      "providerId": "webauthn-register-passwordless"
    },
    {
      "alias": "VERIFY_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Profile",
      "priority": 90,
      "providerId": "VERIFY_PROFILE"
    },
    {
      "alias": "delete_credential",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Delete Credential",
      "priority": 100,
      "providerId": "delete_credential"
    },
    {
      "alias": "update_user_locale",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update User Locale",
      "priority": 1000,
      "providerId": "update_user_locale"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": false,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
          "description": "${role_view-groups}",
          "id": "6fef03a2-df72-4045-953c-da04d91b7447",
          "name": "view-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
          "description": "${role_view-profile}",
          "id": "a7f4158a-a97e-4e82-9746-e49d4506ff70",
          "name": "view-profile"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "containerId": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
          "description": "${role_manage-consent}",
          "id": "d6b47875-94cf-4bf6-9756-40a6a417939d",
          "name": "manage-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
          "description": "${role_view-consent}",
          "id": "109e0c9d-406c-44b9-90e7-17c55ca3290d",
          "name": "view-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
          "description": "${role_delete-account}",
          "id": "ca6dbbd1-f71e-4fab-b72c-974aeeb323e3",
          "name": "delete-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
          "description": "${role_manage-account}",
          "id": "b1e52b6c-1968-4d13-8147-d20ebee47826",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
          "description": "${role_view-applications}",
          "id": "279aabef-833f-42bc-bf6c-732dfa57f0b4",
          "name": "view-applications"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "425732fe-8d92-4709-9548-8e7a2ab8a21b",
          "description": "${role_manage-account-links}",
          "id": "045136bb-b3f0-4e98-a9a1-f118a8f22fc6",
          "name": "manage-account-links"
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "be20ee71-f686-4b1c-b7ad-ab764a36760b",
          "description": "${role_read-token}",
          "id": "94c95e58-8242-4ee9-90c8-cdba6916dff5",
          "name": "read-token"
        }
      ],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_query-groups}",
          "id": "973bb31f-df11-41d6-9ee5-b2d34515404b",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_view-realm}",
          "id": "42ed78b7-ef87-4494-a0d8-2db830b5386c",
          "name": "view-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_view-events}",
          "id": "95deda51-777f-4593-85c3-e45b8c4b7e57",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_query-clients}",
          "id": "4d2dd774-c1eb-4a4c-9c4b-2e0c669699fb",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_view-identity-providers}",
          "id": "52586dae-f57c-4700-8112-3ae26995d452",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_impersonation}",
          "id": "f52532d6-badb-4f6f-bece-e48946e2ed88",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_query-users}",
          "id": "fdc05a99-de90-467a-8c9b-50370a902efa",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_manage-identity-providers}",
          "id": "c8e9441a-ed38-4e69-ac36-9454d2bbde79",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_view-authorization}",
          "id": "9b990d0a-aac1-4f11-a46e-862f5e7d25bb",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_manage-authorization}",
          "id": "124effa6-d250-421e-b39e-913b25e48c23",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "view-realm",
                "view-events",
                "query-clients",
                "view-identity-providers",
                "query-users",
                "impersonation",
                "manage-identity-providers",
                "view-authorization",
                "manage-authorization",
                "view-clients",
                "query-realms",
                "manage-users",
                "manage-clients",
                "manage-events",
                "create-client",
                "manage-realm",
                "view-users"
              ]
            }
          },
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_realm-admin}",
          "id": "4f2393cc-0099-4c88-95b7-faf7fdc19f5d",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_query-realms}",
          "id": "b06a8241-48f1-4b12-bae0-73d7959feab9",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_view-clients}",
          "id": "5674f421-b6f2-48d2-b828-de7c302b44ec",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_manage-users}",
          "id": "cac3ee39-f8c7-472b-9a77-24c6b4ce4480",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_manage-clients}",
          "id": "7c2c8211-f0da-4147-9fe3-5d49b1463812",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_manage-events}",
          "id": "164674e1-85c7-4432-a91f-ab7b46780885",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_create-client}",
          "id": "ca6fd643-9756-4212-a53c-fca2141b3739",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_manage-realm}",
          "id": "c9d9d231-11b1-4e90-8487-171cc0c0e420",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "containerId": "78c9c350-9516-45da-8d9a-c12d508be3d5",
          "description": "${role_view-users}",
          "id": "f9c1a3d1-8c55-4643-afb8-e3403eb3c20d",
          "name": "view-users"
        }
      ],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "$(env:KCP_MAIN_ID)",
        "description": "${role_offline-access}",
        "id": "a0f24f14-b5b7-4a02-b607-fc9ec5543bed",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          },
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "containerId": "$(env:KCP_MAIN_ID)",
        "description": "${role_default-roles}",
        "id": "01daddfc-caa4-49b7-be31-5dffc1c76783",
        "name": "default-roles-rasenmaeher"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "realm-management": [
              "query-groups",
              "manage-users",
              "query-users",
              "view-users",
            ]
          }
        },
        "containerId": "$(env:KCP_MAIN_ID)",
        "description": "users tagged as admin in rmapi",
        "id": "ecd5ce56-7166-4d8e-b3a9-5999699d4933",
        "name": "admin"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "$(env:KCP_MAIN_ID)",
        "description": "${role_uma_authorization}",
        "id": "7c6c64c6-e25a-4aed-a539-b6a872cd220d",
        "name": "uma_authorization"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "verifyEmail": false,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}
